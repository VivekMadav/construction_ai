version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: qs_ai_postgres
    environment:
      POSTGRES_DB: qs_ai_db
      POSTGRES_USER: qs_user
      POSTGRES_PASSWORD: qs_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - qs_ai_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: qs_ai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - qs_ai_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: qs_ai_backend
    environment:
      - DATABASE_URL=postgresql://qs_user:qs_password@postgres:5432/qs_ai_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - DEBUG=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - qs_ai_network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (optional - can run locally with npm)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: qs_ai_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - qs_ai_network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  qs_ai_network:
    driver: bridge 